namespace:

  module: MolecularReplacement

components: 

- id: MolrepInputTemplate
  className: java.lang.String 
  singleton: true 
  constructor: 
  - value: |
      molrep -f $mtzIn -m $pdbIn << eof
      DYAD=M
      SURF=O
      eof

- id: PhaserMatthInputTemplate
  className: java.lang.String 
  singleton: true 
  constructor: 
  - value: |
      phaser << eof
      MODE CCA
      HKLIN $mtzfile
      LABIN F=FP SIGF=SIGFP
      SEARCH MATTHEWS ON
      ENSEMBLE model PDBFILE $pdbfile IDENTITY $ident
      COMPOSITION PROTEIN MW $mw NUM 1
      SEARCH ENSEMBLE model
      ROOT phaser
      eof

- id: ArpwarpInputTemplate  
  className: java.lang.String 
  singleton: true 
  constructor: 
  - value: auto_tracing.sh jobId '.' datafile $mtzfile modelin $pdbfile residues $resinasu freelabin FreeR_flag cgr $ncscopies seqin $sequence

- id: FFTMapInputTemplate
  className: java.lang.String
  singleton: true
  constructor: 
  - value: |
      fft HKLIN $hklin MAPOUT refmac_1.map << eof
      LABIN F1=DELFWT SIG1=SIGFP PHI=PHDELWT
      SCALE F1 1.0
      XYZLIM ASU
      eof

- id: PeakmaxInputTemplate
  className: java.lang.String
  singleton: true
  constructor:
  - value: |
      peakmax MAPIN $map << eof
      THRESHOLD RMS $sigma
      NUMPEAKS 50
      OUTPUT PDB
      RESIDUE WAT
      ATNAME OW
      CHAIN X
      eof

- id: PlotTemplate
  className: java.lang.String
  singleton: true
  constructor:
  - value: |
      <% println "plotname: " + "\'" + plotname + "\'" 
      %><% println "axis_x: " + "\'" + xaxis + "\'"
      %><% println "axis_y: " + "\'" + yaxis + "\'"
      %><% for (i=0; i<xtotal; i+=1) {
        println "name_x" + i + ": " + "\'" + xname[i] + "\'";
      }
      %><% for (i=0; i<ytotal; i+=1) {
        println "name_y" + i + ": " + "\'" + yname[i] + "\'";
      }
      %><% for (i=0; i<xtotal; i+=1) {
        print "x" + i + ": [";
        for (j=0; j<x[i].size()-1; j+=1) {
          print x[i][j] + ", ";
        }
        for (j=x[i].size()-1; j<x[i].size(); j+=1) {
          print x[i][j];
        }
        print "]\n";
      }
      %><% for (i=0; i<ytotal; i+=1) {
        print "y" + i + ": [";
          for (j=0; j<y[i].size()-1; j+=1) {
            print y[i][j] + ", ";
          }
          for (j=y[i].size()-1; j<y[i].size(); j+=1) {
            print y[i][j];
          }
        print "]\n";
      }
      %>
